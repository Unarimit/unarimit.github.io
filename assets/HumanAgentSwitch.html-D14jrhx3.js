import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as p,c,a as n,b as s,d as t,e as l}from"./app-BX3Xhc_b.js";const i="/assets/humanAgentSwitch-1-BoPzIttO.png",u={},r=l('<img src="'+i+`"><h1 id="人机切换" tabindex="-1"><a class="header-anchor" href="#人机切换"><span>人机切换</span></a></h1><p>在一些出现4人或更多人小组作战的单机游戏中，玩家操控一个角色，其他角色由AI操控。为了防止AI决策不如人意，总会提供切换角色的选项（switch！）。如异度之刃系列、最终幻想系列等。</p><h2 id="需求提取" tabindex="-1"><a class="header-anchor" href="#需求提取"><span>需求提取</span></a></h2><blockquote><p>简单的来说就是要找一种对现有状态影响最小，逻辑变动也最小的解决方案</p></blockquote><p>在角色切换时，AI操控的角色的操控权会移交到玩家手中，像对的玩家操控的角色也会移交到AI手中。在切换时可能需要：</p><ul><li>保证角色动画不变，不然就太奇怪了</li><li>玩家操控时的提示UI也需要更新（例如技能，每个角色的技能肯定有差异的对吧，还有小地图等）</li><li>影响游戏逻辑的数据结构更新</li><li>过渡动画</li><li>切换时的加成（换手！）</li><li>。。。</li></ul><h2 id="在unity中实现" tabindex="-1"><a class="header-anchor" href="#在unity中实现"><span>在Unity中实现</span></a></h2><p>我们首先排除把两个待切换角色的<code>GameObject</code>销毁重新创建的想法，因为很难保证动画状态不变。</p><p>由于Unity的脚本是基于<code>组件模式</code>实现的（如果不知道什么是Unity中的组件的话，提示：<code>Component</code> ），可以从组件的角度思考如何解决切换时的问题。具体来说，找到AI操控的角色和玩家操控的角色不同的地方，由特定组件管理这些不同（组件、属性）的管理。</p><blockquote><p>在《游戏编程设计》中，<code>组件模式</code>章节讨论了对操控部分的抽象，使得可以让他支持AI操控、玩家操控或其他操控方法。</p></blockquote><p>使用组件管理的好处是</p><ul><li>可以利用生命周期，创建和销毁相关组件，简化创建流程。</li><li>AI组件和玩家控制组件都可以通过GetComponent获取角色的操作控制组件，解耦控制逻辑。</li><li>可以保持相同功能的组件状态不变，尤其是动画状态。</li></ul><h3 id="例子" tabindex="-1"><a class="header-anchor" href="#例子"><span>例子</span></a></h3><p>以下代码出现在我的游戏的开发过程中，通过一个函数<code>SwithAgentWithPlayer</code>控制角色控制器在AI和玩家的转换。他是通过在组件生命周期中注册和注销其他组件和状态实现的，所以列出了三个部分代码：</p><ul><li><code>PlayerController</code>类：继承自<code>MonoBehaviour</code>，是玩家操控角色的组件。</li><li><code>AgentController</code>类：继承自<code>MonoBehaviour</code>，是AI操控角色的组件。</li><li><code>SwithAgentWithPlayer</code>方法：</li></ul><p>涉及对下列逻辑的控制：</p><ul><li>角色<code>GameObject</code>的&quot;控制权&quot;</li><li>追随玩家操控角色的相机</li><li>小地图图标</li><li>玩家标识<code>Tag</code></li><li>和玩家操控角色相关的UI</li></ul><p>下面是代码：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">// 玩家控制类</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PlayerController</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">MonoBehaviour</span></span><span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Awake</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 相机追踪</span>
        _cameraFlowing <span class="token operator">=</span> <span class="token function">Instantiate</span><span class="token punctuation">(</span>ResourceManager<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Load</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>GameObject<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;Characters/CameraFlowing&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> transform<span class="token punctuation">)</span><span class="token punctuation">;</span>
        _context<span class="token punctuation">.</span>m_Camera<span class="token punctuation">.</span>Follow <span class="token operator">=</span> _cameraFlowing<span class="token punctuation">.</span>transform<span class="token punctuation">;</span>
        <span class="token comment">// 小地图</span>
        mapMarkUI <span class="token operator">=</span> <span class="token function">initMiniMapMark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 玩家标识</span>
        transform<span class="token punctuation">.</span>tag <span class="token operator">=</span> MyConfig<span class="token punctuation">.</span>PLAYER_TAG<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 玩家标识</span>
        transform<span class="token punctuation">.</span>tag <span class="token operator">=</span> MyConfig<span class="token punctuation">.</span>UNTAGED_TAG<span class="token punctuation">;</span>
        <span class="token comment">// 注销组件</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>_cameraFlowing <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token function">Destroy</span><span class="token punctuation">(</span>_cameraFlowing<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mapMarkUI <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token function">Destroy</span><span class="token punctuation">(</span>mapMarkUI<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token comment">// AI控制类</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AgentController</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">MonoBehaviour</span></span><span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Awake</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 注册其他组件</span>
        NavMeshAgent <span class="token operator">=</span> <span class="token generic-method"><span class="token function">GetComponent</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>NavMeshAgent<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        NavMeshAgent<span class="token punctuation">.</span>enabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        mapMarkUI <span class="token operator">=</span> <span class="token function">initMiniMapMark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 注销组件</span>
        NavMeshAgent<span class="token punctuation">.</span>enabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>mapMarkUI <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token function">Destroy</span><span class="token punctuation">(</span>mapMarkUI<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SwithAgentWithPlayer</span><span class="token punctuation">(</span><span class="token class-name">Transform</span> agent<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token comment">// 主要逻辑</span>
    <span class="token function">Destroy</span><span class="token punctuation">(</span>oldOpTrans<span class="token punctuation">.</span>transform<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetComponent</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>PlayerController<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">Destroy</span><span class="token punctuation">(</span>agent<span class="token punctuation">.</span>transform<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetComponent</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>AgentController<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    agent<span class="token punctuation">.</span>transform<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddComponent</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>PlayerController<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    oldOpTrans<span class="token punctuation">.</span>transform<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddComponent</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>AgentController<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    agent<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetComponent</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>OperatorController<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">RefreshPlayerUIRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22),d={href:"https://github.com/Unarimit/my-topdown-shooting-game/blob/0154b461cfff4dbdddf2188972c68159486be56e/Assets/Scripts/CombatLogic/CombatContextManager.cs",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/Unarimit/my-topdown-shooting-game/blob/0154b461cfff4dbdddf2188972c68159486be56e/Assets/Scripts/CombatLogic/Characters/Player/PlayerController.cs",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/Unarimit/my-topdown-shooting-game/blob/0154b461cfff4dbdddf2188972c68159486be56e/Assets/Scripts/CombatLogic/Characters/Computer/Agent/AgentController.cs",target:"_blank",rel:"noopener noreferrer"},v=n("blockquote",null,[n("p",null,"这部分由于开发跨度比较长，代码命名规范挺乱的")],-1),b=n("h2",{id:"参考",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考"},[n("span",null,"参考")])],-1),h={href:"https://www.nintendo.com.hk/switch/az3ha/index.html",target:"_blank",rel:"noopener noreferrer"};function g(f,y){const a=o("ExternalLinkIcon");return p(),c("div",null,[r,n("p",null,[s("具体的代码可以在"),n("a",d,[s("MyTDS-CombatContextManager.cs"),t(a)]),s("、"),n("a",k,[s("MyTDS-PlayerController.cs"),t(a)]),s("和"),n("a",m,[s("MyTDS-AgentController.cs"),t(a)]),s("找到。")]),v,b,n("ul",null,[n("li",null,[s("头图："),n("a",h,[s("异度之刃3"),t(a)]),s(" // c酱录播截图")])])])}const A=e(u,[["render",g],["__file","HumanAgentSwitch.html.vue"]]),C=JSON.parse('{"path":"/GameCodeDesign/HumanAgentSwitch.html","title":"人机切换","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"需求提取","slug":"需求提取","link":"#需求提取","children":[]},{"level":2,"title":"在Unity中实现","slug":"在unity中实现","link":"#在unity中实现","children":[{"level":3,"title":"例子","slug":"例子","link":"#例子","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1707819000000,"updatedTime":1707896359000,"contributors":[{"name":"Unarimit","email":"1798907875@qq.com","commits":2}]},"readingTime":{"minutes":2.98,"words":894},"filePathRelative":"GameCodeDesign/HumanAgentSwitch.md","localizedDate":"February 13, 2024"}');export{A as comp,C as data};
