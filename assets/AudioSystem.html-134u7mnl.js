import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o,c,a as n,b as a,d as t,e as l}from"./app-BX3Xhc_b.js";const i={},u=l(`<h1 id="音频系统" tabindex="-1"><a class="header-anchor" href="#音频系统"><span>音频系统</span></a></h1><p>需要通过<code>AudioListener</code>组件接受声音，具体可以查阅Unity Documentation的音频部分。</p><div class="hint-container warning"><p class="hint-container-title">Warning</p><p><code>AudioSource</code>作为一个全局静态类，要控制好他的使用范围，能封装就封装。</p></div><h2 id="audioclip常用函数" tabindex="-1"><a class="header-anchor" href="#audioclip常用函数"><span>AudioClip常用函数</span></a></h2><ul><li><code>AudioClip.LoadAudioData</code>:加载剪辑的音频数据。设置了“Preload Audio Data”的AudioClip将自动加载音频数据。AudioClip如果加载成功，返回 true。</li><li><code>AudioSource.PlayClipAtPoint</code>:该函数会创建一个音频源，并在AudioClip播放完毕后自动处置该音频源。</li><li><code>AudioClip.Create</code>:使用名称和给定的样本长度、声道和频率创建用户 AudioClip。（用于处理流传输的音频或剪辑本地音频）</li></ul><blockquote><p>使用 SetData 设置您自己的音频数据。使用 PCMReaderCallback 和 PCMSetPositionCallback 委托，每当剪辑读取数据和更改位置时获取一个回调。如果 stream 为 true，Unity 将按需读取小块数据。如果 stream 为 false，则在创建期间读取所有样本。</p></blockquote><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子"><span>例子</span></a></h2><h3 id="分割-audioclip" tabindex="-1"><a class="header-anchor" href="#分割-audioclip"><span>分割 AudioClip</span></a></h3><p>这是一段分割连续枪声的例子，我通过肉眼观察得到声音峰值时间（射出子弹的最大声音），并按照峰值时间分割</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>AudioClip<span class="token punctuation">&gt;</span></span> <span class="token function">SplitGunSound</span><span class="token punctuation">(</span><span class="token class-name">AudioClip</span> gunSound<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>gunSound<span class="token punctuation">.</span><span class="token function">LoadAudioData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Debug<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span><span class="token string">&quot;audio not load&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 注：原音频长度为1.5秒</span>
    <span class="token class-name"><span class="token keyword">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> PeekSeconds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span>
        <span class="token number">0.07f</span><span class="token punctuation">,</span> <span class="token number">0.143f</span><span class="token punctuation">,</span> <span class="token number">0.227f</span><span class="token punctuation">,</span> <span class="token number">0.307f</span><span class="token punctuation">,</span> <span class="token number">0.391f</span><span class="token punctuation">,</span>
        <span class="token number">0.471f</span><span class="token punctuation">,</span> <span class="token number">0.554f</span><span class="token punctuation">,</span> <span class="token number">0.636f</span><span class="token punctuation">,</span> <span class="token number">0.711f</span><span class="token punctuation">,</span> <span class="token number">0.794f</span><span class="token punctuation">,</span>
        <span class="token number">0.88f</span><span class="token punctuation">,</span> <span class="token number">0.96f</span><span class="token punctuation">,</span> <span class="token number">1.03f</span><span class="token punctuation">,</span> <span class="token number">1.12f</span><span class="token punctuation">,</span> <span class="token number">1.2f</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token class-name"><span class="token keyword">var</span></span> splitClips <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>AudioClip<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">15</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 计算开始位置</span>
        <span class="token class-name"><span class="token keyword">int</span></span> startSample <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            startSample <span class="token operator">=</span> Mathf<span class="token punctuation">.</span><span class="token function">CeilToInt</span><span class="token punctuation">(</span>PeekSeconds<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> gunSound<span class="token punctuation">.</span>frequency<span class="token punctuation">)</span><span class="token punctuation">;</span>
            startSample <span class="token operator">-=</span> Mathf<span class="token punctuation">.</span><span class="token function">CeilToInt</span><span class="token punctuation">(</span><span class="token number">0.04f</span> <span class="token operator">*</span> gunSound<span class="token punctuation">.</span>frequency<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 计算持续时间</span>
        <span class="token class-name"><span class="token keyword">int</span></span> cliplength <span class="token operator">=</span> Mathf<span class="token punctuation">.</span><span class="token function">CeilToInt</span><span class="token punctuation">(</span><span class="token punctuation">(</span>PeekSeconds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> gunSound<span class="token punctuation">.</span>frequency<span class="token punctuation">)</span> <span class="token operator">-</span> startSample<span class="token punctuation">;</span>
        clipLength <span class="token operator">+=</span> Mathf<span class="token punctuation">.</span><span class="token function">CeilToInt</span><span class="token punctuation">(</span><span class="token number">0.04f</span> <span class="token operator">*</span> gunSound<span class="token punctuation">.</span>frequency<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> splitSamplesData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">float</span></span><span class="token punctuation">[</span>cliplength<span class="token punctuation">]</span><span class="token punctuation">;</span>
        gunSound<span class="token punctuation">.</span><span class="token function">GetData</span><span class="token punctuation">(</span>splitSamplesData<span class="token punctuation">,</span> startSample<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建audioclip，填入数据</span>
        splitClips<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>AudioClip<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token string">&quot;SplitClip&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">,</span> cliplength<span class="token punctuation">,</span> gunSound<span class="token punctuation">.</span>channels<span class="token punctuation">,</span> gunSound<span class="token punctuation">.</span>frequency<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        splitClips<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">SetData</span><span class="token punctuation">(</span>splitSamplesData<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 返回分割后的片段</span>
    <span class="token keyword">return</span> splitClips<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2>`,11),r={href:"https://www.xaudiopro.com/edit/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://docs.unity3d.com/cn/current/Manual/AudioOverview.html",target:"_blank",rel:"noopener noreferrer"};function d(m,v){const s=e("ExternalLinkIcon");return o(),c("div",null,[u,n("ul",null,[n("li",null,[n("a",r,[a("XAudio - 在线音频编辑"),t(s)])]),n("li",null,[n("a",k,[a("Unity音频概述 - Unity Doc"),t(s)])])])])}const h=p(i,[["render",d],["__file","AudioSystem.html.vue"]]),y=JSON.parse('{"path":"/UnityComponent/AudioSystem.html","title":"音频系统","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"AudioClip常用函数","slug":"audioclip常用函数","link":"#audioclip常用函数","children":[]},{"level":2,"title":"例子","slug":"例子","link":"#例子","children":[{"level":3,"title":"分割 AudioClip","slug":"分割-audioclip","link":"#分割-audioclip","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1707819000000,"updatedTime":1707819000000,"contributors":[{"name":"Unarimit","email":"1798907875@qq.com","commits":1}]},"readingTime":{"minutes":1.49,"words":447},"filePathRelative":"UnityComponent/AudioSystem.md","localizedDate":"February 13, 2024"}');export{h as comp,y as data};
