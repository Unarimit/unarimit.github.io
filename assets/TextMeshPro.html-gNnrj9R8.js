import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as p,c,a as n,b as s,d as e,e as l}from"./app-BX3Xhc_b.js";const i="/assets/tmp-1-D4cB41h9.png",r={},u=n("h1",{id:"textmeshpro-tmp",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#textmeshpro-tmp"},[n("span",null,"TextMeshPro(TMP)")])],-1),d=n("div",{class:"hint-container warning"},[n("p",{class:"hint-container-title"},"Warning"),n("p",null,"内容需要更多实践完善")],-1),k=n("p",null,"对于中文和加入新字体来说都是一个挺难用的组件。给了很多选项，看的眼花缭乱。",-1),m=n("p",null,"尤其是涉及字体采样率的优化和中文常用字选择的优化策略等。",-1),h={href:"https://docs.unity3d.com/Packages/com.unity.textmeshpro@4.0/manual/index.html",target:"_blank",rel:"noopener noreferrer"},v=n("h2",{id:"中文字体",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#中文字体"},[n("span",null,"中文字体")])],-1),b=n("p",null,"由于中文字体很多，都打包成贴图空间会很大，一般采取打包常用字的方式。",-1),_={href:"https://github.com/wy-luke/Unity-TextMeshPro-Chinese-Characters-Set",target:"_blank",rel:"noopener noreferrer"},g=l('<p>当然，如果有用户输入的需求，就不需要考虑贴图大小了。</p><p>需要注意的是，创建<code>Font Atlas</code>时<code>Atlas Resolution</code>这个值要选的大一些，不然字体放不下。</p><h2 id="例子-实现伤害飘字" tabindex="-1"><a class="header-anchor" href="#例子-实现伤害飘字"><span>例子-实现伤害飘字</span></a></h2><img src="'+i+`"><ol><li>导入字体<code>DS-Digital</code>（一个像是老式计算器上的字体，有字母和数字） <ul><li>复制ttf文件进入unity</li><li>通过unity editor创建<code>Font Atlas</code>（包括贴图和材质） <ul><li>windows -&gt; TextMeshPro -&gt; Font Asset Creator</li></ul></li></ul></li><li>新建3D-&gt;Text，TextMeshPro组件的<code>Font Asset</code>选中1里创建的asset <ul><li>mesh里面不选对应的材质也能有asset的效果，很迷</li></ul></li><li><code>Font Asset</code>的材质使用<code>TextMeshPro/Distance Field Overlay</code>shader，使其不受遮挡 <ul><li>图中的效果改了颜色和HDR，还有描边</li></ul></li><li>实现漂浮代码（需要在inspector中拖入组件哦）</li></ol><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span>初始化的时候立刻设置DmageNum<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DamageNumEffectController</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">MonoBehaviour</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> DamageNum <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token class-name">TextMeshPro</span> _text<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">float</span></span> speed <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">float</span></span> speed_weak <span class="token operator">=</span> <span class="token number">5f</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _text <span class="token operator">=</span> <span class="token generic-method"><span class="token function">GetComponent</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TextMeshPro<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        _text<span class="token punctuation">.</span>text <span class="token operator">=</span> DamageNum<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        transform<span class="token punctuation">.</span>rotation <span class="token operator">=</span> Quaternion<span class="token punctuation">.</span><span class="token function">LookRotation</span><span class="token punctuation">(</span>Camera<span class="token punctuation">.</span>main<span class="token punctuation">.</span>transform<span class="token punctuation">.</span>forward<span class="token punctuation">)</span><span class="token punctuation">;</span>
        transform<span class="token punctuation">.</span><span class="token function">Translate</span><span class="token punctuation">(</span>transform<span class="token punctuation">.</span>up <span class="token operator">*</span> speed <span class="token operator">*</span> Time<span class="token punctuation">.</span>deltaTime<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//使字体向上移动</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>speed <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            speed <span class="token operator">-=</span> speed_weak <span class="token operator">*</span> Time<span class="token punctuation">.</span>deltaTime<span class="token punctuation">;</span><span class="token comment">//使得向上移动的速度逐渐减少</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            <span class="token function">Destroy</span><span class="token punctuation">(</span>gameObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2>`,7),f={href:"https://blog.csdn.net/WEIWEI6661012/article/details/129630051",target:"_blank",rel:"noopener noreferrer"},y={href:"https://docs.unity3d.com/Packages/com.unity.textmeshpro@4.0/manual/index.html",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/wy-luke/Unity-TextMeshPro-Chinese-Characters-Set",target:"_blank",rel:"noopener noreferrer"};function T(w,P){const a=o("ExternalLinkIcon");return p(),c("div",null,[u,d,k,m,n("p",null,[s("需要更多实践以完善内容，或参照文档："),n("a",h,[s("TextMesh Pro Documentation - doc.u3d"),e(a)])]),v,b,n("blockquote",null,[n("p",null,[s("常用字库："),n("a",_,[s("Unity-TextMeshPro-Chinese-Characters-Set - Github"),e(a)])])]),g,n("ul",null,[n("li",null,[s("伤害飘字2d版："),n("a",f,[s("Unity实现伤害飘字 - csdn"),e(a)])]),n("li",null,[s("TMP官方手册："),n("a",y,[s("TextMesh Pro Documentation - doc.u3d"),e(a)])]),n("li",null,[s("常用字库："),n("a",x,[s("Unity-TextMeshPro-Chinese-Characters-Set - Github"),e(a)])])])])}const D=t(r,[["render",T],["__file","TextMeshPro.html.vue"]]),S=JSON.parse('{"path":"/UnityComponent/TextMeshPro.html","title":"TextMeshPro(TMP)","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"中文字体","slug":"中文字体","link":"#中文字体","children":[]},{"level":2,"title":"例子-实现伤害飘字","slug":"例子-实现伤害飘字","link":"#例子-实现伤害飘字","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1707819000000,"updatedTime":1707819000000,"contributors":[{"name":"Unarimit","email":"1798907875@qq.com","commits":1}]},"readingTime":{"minutes":1.61,"words":484},"filePathRelative":"UnityComponent/TextMeshPro.md","localizedDate":"February 13, 2024"}');export{D as comp,S as data};
