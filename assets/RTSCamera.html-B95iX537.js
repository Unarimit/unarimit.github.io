import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as s,o as l,c as i,d as a,w as u,a as n,b as p,e as t}from"./app-BX3Xhc_b.js";const r="/assets/rts-camera-fwW2SFTh.png",k={},d=t('<h1 id="rts相机" tabindex="-1"><a class="header-anchor" href="#rts相机"><span>RTS相机</span></a></h1><p>可以随鼠标移到边界而平移的相机，因为多在RTS游戏中使用（如星际、魔兽、红警系列），所以叫这个名。</p><h2 id="需求提取" tabindex="-1"><a class="header-anchor" href="#需求提取"><span>需求提取</span></a></h2><p>当玩家鼠标移动到边界时，拖动(pan)相机</p><ul><li>检测鼠标移动到边界，通过<code>Mouse.current.position.value</code>api完成。</li><li>正确的根据上下左右边界移动相机，需要根据角度计算正确的方向。</li><li>设置相机移动边界。</li></ul><p>*其实没有什么技术难度，最多就是看unity TD模板的时候，四元数和向量做乘法挺震撼的。</p><h2 id="代码实现" tabindex="-1"><a class="header-anchor" href="#代码实现"><span>代码实现</span></a></h2><p>发现<code>CinemachineVirtualCamera</code>里面没有这个功能，就参考了Unity的塔防模板抄了一个，在基础上增加了对相机中心范围的显示（使用Gizmo），取消了缩放的关联。</p>',8),m=n("img",{src:r},null,-1),v=t(`<p>代码如下：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 可随鼠标移动的相机</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">internal</span> <span class="token keyword">class</span> <span class="token class-name">PanableCameraController</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">MonoBehaviour</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">Rect</span> m_LookCenterBounds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Rect</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">float</span></span> m_GroundHeight <span class="token operator">=</span> <span class="token number">40f</span><span class="token punctuation">;</span>

    <span class="token class-name"><span class="token keyword">float</span></span> screenPanThreshold <span class="token operator">=</span> <span class="token number">40f</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">float</span></span> panSpeed <span class="token operator">=</span> <span class="token number">30f</span><span class="token punctuation">;</span>

    <span class="token comment">// 记录当前偏移</span>
    <span class="token keyword">private</span> <span class="token class-name">Vector3</span> lookDiff<span class="token punctuation">;</span>
    <span class="token comment">// 定义四个方向</span>
    <span class="token class-name">Vector3</span> left<span class="token punctuation">;</span>
    <span class="token class-name">Vector3</span> right<span class="token punctuation">;</span>
    <span class="token class-name">Vector3</span> up<span class="token punctuation">;</span>
    <span class="token class-name">Vector3</span> down<span class="token punctuation">;</span>

    <span class="token comment">// 当切换回相机时，复位</span>
    <span class="token class-name">Vector3</span> InitPos<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Awake</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        InitPos <span class="token operator">=</span> transform<span class="token punctuation">.</span>position<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        up <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Vector3</span><span class="token punctuation">(</span>transform<span class="token punctuation">.</span>forward<span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> transform<span class="token punctuation">.</span>forward<span class="token punctuation">.</span>z<span class="token punctuation">)</span><span class="token punctuation">.</span>normalized<span class="token punctuation">;</span>
        down <span class="token operator">=</span> <span class="token operator">-</span>up<span class="token punctuation">;</span>
        right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Vector3</span><span class="token punctuation">(</span>transform<span class="token punctuation">.</span>right<span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> transform<span class="token punctuation">.</span>right<span class="token punctuation">.</span>z<span class="token punctuation">)</span><span class="token punctuation">.</span>normalized<span class="token punctuation">;</span>
        left <span class="token operator">=</span> <span class="token operator">-</span>right<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnEnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        lookDiff <span class="token operator">=</span> Vector3<span class="token punctuation">.</span>zero<span class="token punctuation">;</span>
        transform<span class="token punctuation">.</span>position <span class="token operator">=</span> InitPos<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">edgePanCamera</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnDrawGizmos</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> lookRay <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Ray</span><span class="token punctuation">(</span>transform<span class="token punctuation">.</span>position<span class="token punctuation">,</span> transform<span class="token punctuation">.</span>forward<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> lookCenter <span class="token operator">=</span> lookRay<span class="token punctuation">.</span><span class="token function">GetPoint</span><span class="token punctuation">(</span>m_GroundHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Vector3</span> center <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Vector3</span><span class="token punctuation">(</span>
            m_LookCenterBounds<span class="token punctuation">.</span>xMin <span class="token operator">+</span> m_LookCenterBounds<span class="token punctuation">.</span>xMax <span class="token operator">+</span> lookCenter<span class="token punctuation">.</span>x<span class="token punctuation">,</span> 
            transform<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y<span class="token operator">-</span>m_GroundHeight <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> 
            m_LookCenterBounds<span class="token punctuation">.</span>yMin <span class="token operator">+</span> m_LookCenterBounds<span class="token punctuation">.</span>yMax <span class="token operator">+</span> lookCenter<span class="token punctuation">.</span>z
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Vector3</span> size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Vector3</span><span class="token punctuation">(</span>m_LookCenterBounds<span class="token punctuation">.</span>xMax <span class="token operator">-</span> m_LookCenterBounds<span class="token punctuation">.</span>xMin<span class="token punctuation">,</span> m_GroundHeight<span class="token punctuation">,</span> m_LookCenterBounds<span class="token punctuation">.</span>yMax <span class="token operator">-</span> m_LookCenterBounds<span class="token punctuation">.</span>yMin<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        Gizmos<span class="token punctuation">.</span><span class="token function">DrawWireCube</span><span class="token punctuation">(</span>center<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">edgePanCamera</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">Vector2</span> mousePos <span class="token operator">=</span> Mouse<span class="token punctuation">.</span>current<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token keyword">value</span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">bool</span></span> mouseInside <span class="token operator">=</span> <span class="token punctuation">(</span>mousePos<span class="token punctuation">.</span>x <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                            <span class="token punctuation">(</span>mousePos<span class="token punctuation">.</span>x <span class="token operator">&lt;</span> Screen<span class="token punctuation">.</span>width<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                            <span class="token punctuation">(</span>mousePos<span class="token punctuation">.</span>y <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                            <span class="token punctuation">(</span>mousePos<span class="token punctuation">.</span>y <span class="token operator">&lt;</span> Screen<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mouseInside <span class="token keyword">is</span> <span class="token class-name">false</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>


        <span class="token comment">// Left</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mousePos<span class="token punctuation">.</span>x <span class="token operator">&lt;</span> screenPanThreshold<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">float</span></span> panAmount <span class="token operator">=</span> <span class="token punctuation">(</span>screenPanThreshold <span class="token operator">-</span> mousePos<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">/</span> screenPanThreshold<span class="token punctuation">;</span>
            panAmount <span class="token operator">=</span> Mathf<span class="token punctuation">.</span><span class="token function">Clamp01</span><span class="token punctuation">(</span>Mathf<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span>panAmount<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">panCamera</span><span class="token punctuation">(</span>left <span class="token operator">*</span> Time<span class="token punctuation">.</span>deltaTime <span class="token operator">*</span> panSpeed <span class="token operator">*</span> panAmount<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Right</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mousePos<span class="token punctuation">.</span>x <span class="token operator">&gt;</span> Screen<span class="token punctuation">.</span>width <span class="token operator">-</span> screenPanThreshold<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">float</span></span> panAmount <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>screenPanThreshold <span class="token operator">-</span> Screen<span class="token punctuation">.</span>width<span class="token punctuation">)</span> <span class="token operator">+</span> mousePos<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">/</span> screenPanThreshold<span class="token punctuation">;</span>
            panAmount <span class="token operator">=</span> Mathf<span class="token punctuation">.</span><span class="token function">Clamp01</span><span class="token punctuation">(</span>Mathf<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span>panAmount<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">panCamera</span><span class="token punctuation">(</span>right <span class="token operator">*</span> Time<span class="token punctuation">.</span>deltaTime <span class="token operator">*</span> panSpeed <span class="token operator">*</span> panAmount<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Down</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mousePos<span class="token punctuation">.</span>y <span class="token operator">&lt;</span> screenPanThreshold<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">float</span></span> panAmount <span class="token operator">=</span> <span class="token punctuation">(</span>screenPanThreshold <span class="token operator">-</span> mousePos<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">/</span> screenPanThreshold<span class="token punctuation">;</span>
            panAmount <span class="token operator">=</span> Mathf<span class="token punctuation">.</span><span class="token function">Clamp01</span><span class="token punctuation">(</span>Mathf<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span>panAmount<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">panCamera</span><span class="token punctuation">(</span>down <span class="token operator">*</span> Time<span class="token punctuation">.</span>deltaTime <span class="token operator">*</span> panSpeed <span class="token operator">*</span> panAmount<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Up</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mousePos<span class="token punctuation">.</span>y <span class="token operator">&gt;</span> Screen<span class="token punctuation">.</span>height <span class="token operator">-</span> screenPanThreshold<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">float</span></span> panAmount <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>screenPanThreshold <span class="token operator">-</span> Screen<span class="token punctuation">.</span>height<span class="token punctuation">)</span> <span class="token operator">+</span> mousePos<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">/</span> screenPanThreshold<span class="token punctuation">;</span>
            panAmount <span class="token operator">=</span> Mathf<span class="token punctuation">.</span><span class="token function">Clamp01</span><span class="token punctuation">(</span>Mathf<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span>panAmount<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">panCamera</span><span class="token punctuation">(</span>up <span class="token operator">*</span> Time<span class="token punctuation">.</span>deltaTime <span class="token operator">*</span> panSpeed <span class="token operator">*</span> panAmount<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// Pan the camera</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>panDelta<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>How far to pan the camera, in world space units<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">panCamera</span><span class="token punctuation">(</span><span class="token class-name">Vector3</span> panDelta<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">Vector3</span> pos <span class="token operator">=</span> lookDiff<span class="token punctuation">;</span>
        pos <span class="token operator">+=</span> panDelta<span class="token punctuation">;</span>

        <span class="token comment">// Clamp to look bounds</span>
        pos<span class="token punctuation">.</span>x <span class="token operator">=</span> Mathf<span class="token punctuation">.</span><span class="token function">Clamp</span><span class="token punctuation">(</span>pos<span class="token punctuation">.</span>x<span class="token punctuation">,</span> m_LookCenterBounds<span class="token punctuation">.</span>xMin<span class="token punctuation">,</span> m_LookCenterBounds<span class="token punctuation">.</span>xMax<span class="token punctuation">)</span><span class="token punctuation">;</span>
        pos<span class="token punctuation">.</span>z <span class="token operator">=</span> Mathf<span class="token punctuation">.</span><span class="token function">Clamp</span><span class="token punctuation">(</span>pos<span class="token punctuation">.</span>z<span class="token punctuation">,</span> m_LookCenterBounds<span class="token punctuation">.</span>yMin<span class="token punctuation">,</span> m_LookCenterBounds<span class="token punctuation">.</span>yMax<span class="token punctuation">)</span><span class="token punctuation">;</span>

        transform<span class="token punctuation">.</span>position <span class="token operator">+=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Vector3</span><span class="token punctuation">(</span>pos<span class="token punctuation">.</span>x <span class="token operator">-</span> lookDiff<span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> pos<span class="token punctuation">.</span>z <span class="token operator">-</span> lookDiff<span class="token punctuation">.</span>z<span class="token punctuation">)</span><span class="token punctuation">;</span>
        lookDiff <span class="token operator">=</span> pos<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2>`,3),b={href:"https://assetstore.unity.com/packages/essentials/tutorial-projects/tower-defense-template-107692",target:"_blank",rel:"noopener noreferrer"};function h(f,y){const o=s("center"),e=s("ExternalLinkIcon");return l(),i("div",null,[d,a(o,null,{default:u(()=>[m,p(" 使用Gizmos显示相机中心范围（中间的白色Cube框线） ")]),_:1}),v,n("ul",null,[n("li",null,[n("a",b,[p("Tower Defense Template - UnityAssets"),a(e)])])])])}const _=c(k,[["render",h],["__file","RTSCamera.html.vue"]]),C=JSON.parse('{"path":"/GameCodeDesign/RTSCamera.html","title":"RTS相机","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"需求提取","slug":"需求提取","link":"#需求提取","children":[]},{"level":2,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1707819000000,"updatedTime":1707819000000,"contributors":[{"name":"Unarimit","email":"1798907875@qq.com","commits":1}]},"readingTime":{"minutes":1.88,"words":565},"filePathRelative":"GameCodeDesign/RTSCamera.md","localizedDate":"February 13, 2024"}');export{_ as comp,C as data};
