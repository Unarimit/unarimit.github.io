import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as i,c as s,d as n,w as p,a as e,b as l,e as a}from"./app-BX3Xhc_b.js";const d="/assets/language-0-IfAgXbDQ.png",h={},u=a('<h1 id="编程语言的学习方法" tabindex="-1"><a class="header-anchor" href="#编程语言的学习方法"><span>编程语言的学习方法</span></a></h1><p>本版块将重点描述C#（7.0）和C++（11）两种编程语言的学习方法，参考部分也给出了一些书目。</p><h2 id="背景故事" tabindex="-1"><a class="header-anchor" href="#背景故事"><span>背景故事</span></a></h2><p>前几天面了某大厂的客户端开发，它的招聘需求里有这样一条：</p><blockquote><p>“至少了解一门C系语言，至少精通一门面向对象的编程语言，并深入了解其思想、原理和底层细节。” <br>*你甚至可以根据这句话搜到是哪个公司（</p></blockquote><p>一面非常满足其中所写的，主要问对编程语言的熟悉程度（要求精通）。经历1小时的拷打后，我感觉这方面确实没有准备好，有些地方靠背八股文和只看书还是不太行，所以有了这个板块。</p><blockquote><p>面试中我干了很蠢的事，面试官让我从c#和c++中挑一个问，我说都行，结果他选了c#。但实际我都没怎么看过c#的面经，对他问什么都没有一个预期。。居然把选择交给面试官，我很怀疑我当时的心理状态。</p></blockquote><h2 id="导图介绍" tabindex="-1"><a class="header-anchor" href="#导图介绍"><span>导图介绍</span></a></h2><p>下图是一张我汇总的思维导图，我会在板块中的其他标题（子文章）中完善这些内容。</p><img src="'+d+'">',10),_=e("p",null,[e("strong",null,"需要注意的是"),l("：编程语言的实现细节是和操作系统、计算机组成原理等紧密相关的，可以举例抛出两个相关问题：")],-1),C=e("ul",null,[e("li",null,[l("为什么多线程访问变量时需要使用volatile关键字？ "),e("ul",null,[e("li",null,"这里简单回答一下，除了保证操作的原子性和编译不打乱顺序外，还要保证访问变量时不从缓存的线程上下文（在CPU的Cache中）读取，而直接从内存读取。避免两个线程虽然访问的是同一个变量，但实际上都是访问各自在缓存中的副本的情况。")])]),e("li",null,"描述一次函数调用？")],-1),m={href:"https://www.xiaolincoding.com/os",target:"_blank",rel:"noopener noreferrer"},b=a('<blockquote><p>基于观点“不经常用的东西就会忘”，我的想法是只仔细研究现在要用的部分，其余的细节简单看一下有个印象就好啦</p></blockquote><h2 id="c-和c-的区别" tabindex="-1"><a class="header-anchor" href="#c-和c-的区别"><span>C++和C#的区别</span></a></h2><ul><li><p>从Unity角度上说：Unity使用C#作为脚本语言，其底层仍是C++。编译时有一种策略（IL2CPP）涉及C#到C++的转换。</p></li><li><p>从语言设计角度上说：</p><ul><li>C#更“易用”。C#接管了内存管理内容（托管内存），并有一系列工程友好的“语法糖”。但“易用”并不意味学起来会更简单，反而会因为一些抽象的“语法糖”影响对代码本质的判断。 <blockquote><p>“C#语言设计者从C/C++规范中删除了他们不喜欢的特性，同时创建了他们喜欢的。开发组还有其他语言的资深专家。” —— 《Essential C# 7.0》</p></blockquote></li><li>C#的可读性和鲁棒性更强。可读性强是由语法糖和托管内存（不像c++有各种指针和引用）提供的，鲁棒性则是C#的内置库发生访问越界问题都会抛出异常，转型也需要满足要求等，不像C++，可以通过指针访问和修改未经保护的内容，还有 <code>()</code> 转型和 <code>reinterpret_cast</code> 这种东西存在。</li><li>C#的JIT、IL、CLR，区别于C++的按平台编译，C#可以实现跨平台（即不同平台只需“编译”一次）。</li><li>...</li></ul></li><li><p>从内存管理角度上说：C++把内存管理交给了程序员，有<code>shared_ptr</code>之类的库去辅助执行。C#托管内存，但开发者需要注意垃圾回收（GC）的工作方式，以及可能由此产生的GC暂停，以及对“本机资源”（如<code>FileStream</code>）的特殊处理（“本机资源”这一点，c++也一样，需要通过构造析构完成申请和回收细节）。</p></li><li><p>从对OOP的支持角度上说：C++支持多继承，C#则通过接口近似多继承的功能。</p></li><li><p>从面试的角度上说：C++因为比较基础，有很多面经，在学习时可以根据面经检测是否学的牢固（指满足应聘方的要求）。而C#感觉可以问的角度很多，自己见的不多，不做评价（我畏惧了）。</p></li></ul><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2>',4),f={href:"https://book.douban.com/subject/10505113/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://en.cppreference.com/w/cpp/language/basic_concepts",target:"_blank",rel:"noopener noreferrer"},k={href:"https://book.douban.com/subject/33474759",target:"_blank",rel:"noopener noreferrer"},x={href:"https://book.douban.com/subject/26285940",target:"_blank",rel:"noopener noreferrer"},q={href:"https://www.xiaolincoding.com/os",target:"_blank",rel:"noopener noreferrer"};function v(w,L){const r=o("center"),t=o("ExternalLinkIcon");return i(),s("div",null,[u,n(r,null,{default:p(()=>[l(" 如何精通一门编程语言-思维导图（看不清可以右键打开） ")]),_:1}),_,C,e("p",null,[l("这里推荐阅读"),e("a",m,[l("图解系统系列"),n(t)]),l("，如果想要更系统化的学习，那就去看相关的书和公开课吧。")]),b,e("ul",null,[e("li",null,[e("a",f,[l("《C++ Primer 第五版》"),n(t)])]),e("li",null,[e("a",g,[l("cppreference.com"),n(t)])]),e("li",null,[e("a",k,[l("《Essential C# 7.0》"),n(t)])]),e("li",null,[e("a",x,[l("《CLR via C# 第四版》"),n(t)])]),e("li",null,[e("a",q,[l("图解系统系列 - 小林coding"),n(t)])])])])}const E=c(h,[["render",v],["__file","index.html.vue"]]),N=JSON.parse('{"path":"/Language/","title":"编程语言的学习方法","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"背景故事","slug":"背景故事","link":"#背景故事","children":[]},{"level":2,"title":"导图介绍","slug":"导图介绍","link":"#导图介绍","children":[]},{"level":2,"title":"C++和C#的区别","slug":"c-和c-的区别","link":"#c-和c-的区别","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1711785342000,"updatedTime":1717933072000,"contributors":[{"name":"Unarimit","email":"1798907875@qq.com","commits":7}]},"readingTime":{"minutes":3.92,"words":1176},"filePathRelative":"Language/index.md","localizedDate":"March 30, 2024"}');export{E as comp,N as data};
