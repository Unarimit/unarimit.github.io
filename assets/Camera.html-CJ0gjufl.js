import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as r,c as p,d as a,w as t,a as e,b as n,e as o}from"./app-BX3Xhc_b.js";const d="/assets/camera-0-B6nzxjzx.png",u="/assets/camera-1-BU_MKBeq.png",h="/assets/camera-2-DR1QfIN-.png",m={},_=o('<h1 id="摄像机" tabindex="-1"><a class="header-anchor" href="#摄像机"><span>摄像机</span></a></h1><img src="'+d+'"><p>摄像机作为游戏制作的3C之一，... 后面忘了</p><h2 id="基本相机属性" tabindex="-1"><a class="header-anchor" href="#基本相机属性"><span>基本相机属性</span></a></h2><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>渲染管线不同，相机的配置属性不同</p></div><p>Unity版本2022.3，使用URP v14</p><ul><li><code>RenderType</code>：base和overlay，base是默认的，独立工作的相机。overlay依赖于base相机，在base基础上叠放渲染结果。</li><li><code>Projection</code>：可以通过调整FOV（视场）帮助cpu正确的剔除不需要渲染的物体</li><li><code>Rendering</code>：总之就是渲染相关 <ul><li>里面有一个<code>Post-Processing</code>选项，每次都忘记选。</li></ul></li><li><code>Stack</code>: base中独有，可以在里面添加overlay相机，将渲染结果覆盖到上方</li><li><code>Enviorment</code>：设置背景，即没投影到物体显示什么东西</li><li><code>Output</code><ul><li>两个渲染位置：RenderTexture &amp; Screen</li></ul></li></ul><h3 id="分层渲染" tabindex="-1"><a class="header-anchor" href="#分层渲染"><span>分层渲染</span></a></h3><p>当涉及UI和3D物体的显示时，常常需要分层渲染，如世界坐标系下的互动UI一定在3D物体之上，或主角的模型在UI面板之前显示等。</p><p>下图是一个可互动发光物体上显示的互动提示UI，可以看到它因为后处理被整体拉低了颜色。</p>',10),b=e("img",{src:u},null,-1),k=e("p",null,"若我们使用分层渲染(如下图所示)，世界坐标下的UI可以避免被后处理影响，也不会被3D物体遮挡。",-1),v=e("img",{src:h},null,-1),f=e("p",null,"分层渲染在不同的渲染管线下实现方式不同：",-1),g=e("code",null,"overlay",-1),y=e("code",null,"overlay",-1),C={href:"https://blog.csdn.net/aaa27987/article/details/129753424",target:"_blank",rel:"noopener noreferrer"},U=e("code",null,"overlay",-1),w=e("code",null,"base",-1),x=e("code",null,"anti-aliasing",-1),P={href:"https://forum.unity.com/threads/blurry-font-when-using-screen-space-camera.509147/",target:"_blank",rel:"noopener noreferrer"},R=e("code",null,"anti-aliasing",-1),V=o("<li>再配置一个不带<code>anti-aliasing</code>的<code>base</code>相机，提高渲染优先级，背景设为<code>Uninitialized</code>，过滤layer。（不建议使用，<code>Uninitialized</code>很有问题，我URPv12和v14的<code>Uninitialized</code>在同一台设备下功能居然不一样）</li><li>在<code>overlay</code>相机的<code>Renderer</code>配置不带<code>anti-aliasing</code>的<code>URP Render setting</code>（TODO：需要验证可行性）。</li>",2),B={href:"https://docs.unity3d.com/Packages/com.unity.render-pipelines.universal@14.0/manual/cameras-advanced.html",target:"_blank",rel:"noopener noreferrer"},T=e("code",null,"渲染优先级",-1),D=e("code",null,"Clear Flags",-1),O={href:"https://discussions.unity.com/t/world-space-canvas-on-top-of-everything/128165/3",target:"_blank",rel:"noopener noreferrer"},I=o('<h2 id="自动相机-cinemachine" tabindex="-1"><a class="header-anchor" href="#自动相机-cinemachine"><span>自动相机-Cinemachine</span></a></h2><p><code>Cinemachine</code>是unity提供的一套控制相机移动的组件，需要配置以下组件:</p><ul><li><code>CinemachineVirtualCamera</code></li><li><code>CinemachineBrain</code>：可以控制多个<code>CinemachineVirtualCamera</code>替换主相机 <ul><li>可以实现丝滑的在两个<code>CinemachineVirtualCamera</code>之间切换，是主要功能之一</li></ul></li></ul><h3 id="cinemachinebrain" tabindex="-1"><a class="header-anchor" href="#cinemachinebrain"><span>CinemachineBrain</span></a></h3><p><code>CinemachineBrain</code>用来控制主相机，和相机切换时的blend、</p><ul><li>通过改变<code>CinemachineVirtualCamera</code>优先级的方式切换相机</li><li>默认为平滑过渡，可以给每个虚拟相机设置过渡曲线</li></ul>',6),S=e("code",null,"CinemachineBrain",-1),E={href:"https://www.youtube.com/watch?v=P_ibDJhFVMU",target:"_blank",rel:"noopener noreferrer"},N=o('<ul><li>通过<code>World Up Override</code>消除Camera Roll</li></ul><h3 id="cinemachinevirtualcamera" tabindex="-1"><a class="header-anchor" href="#cinemachinevirtualcamera"><span>CinemachineVirtualCamera</span></a></h3><p><code>CinemachineVirtualCamera</code>有两组主要属性</p><ul><li>第一组：<code>Follow</code>和<code>Body</code>。</li><li>第二组：<code>LookAt</code>和<code>Aim</code>。</li></ul><p>对于第一组属性，选择该组件的<code>Body</code>，确定相机的<strong>跟随</strong>目标的风格</p><ul><li><code>3rd person follow</code>：第三人称相机，在TPS、(A)RPG类型中使用较多 <ul><li>例如：神秘海域，原神，PUBG</li></ul></li><li><code>Farming Transposer</code>：第三人称俯视视角，在MOBA、RTS(即时策略)、2D-RPG类型中使用较多 <ul><li>例如：模拟农场，英雄联盟、HellDivers、冒险岛</li><li>特性：角色前向的视野会比其他方向多</li></ul></li><li><code>Hard Lock to Target</code>：第一人称</li><li><code>Orbital Transposer</code>：第三人称环绕，用于一些游戏的胜利演出之类的？ <ul><li>例如：跑跑卡丁车冲线后动画</li></ul></li><li><code>Tracked Dolly</code>：一定范围内水平移动</li><li><code>Transposer</code>：随<code>Transform</code>相对运动</li></ul>',6),z={href:"https://www.youtube.com/watch?v=asruvbmUyw8",target:"_blank",rel:"noopener noreferrer"},A=o(`<h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子"><span>例子</span></a></h2><h3 id="实现moba游戏跟随相机" tabindex="-1"><a class="header-anchor" href="#实现moba游戏跟随相机"><span>实现moba游戏跟随相机</span></a></h3><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">float</span></span> smoothness <span class="token operator">=</span> <span class="token number">0.5f</span><span class="token punctuation">;</span>
<span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    cemeraOffset <span class="token operator">=</span> transform<span class="token punctuation">.</span>position <span class="token operator">-</span> player<span class="token punctuation">.</span>transform<span class="token punctuation">.</span>position<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">Vector3</span> newPos <span class="token operator">=</span> Player<span class="token punctuation">.</span>position <span class="token operator">+</span> cemeraOffset<span class="token punctuation">;</span>
    transform<span class="token punctuation">.</span>position <span class="token operator">=</span> Vector3<span class="token punctuation">.</span><span class="token function">Slerp</span><span class="token punctuation">(</span>transform<span class="token punctuation">.</span>position<span class="token punctuation">,</span> newPos<span class="token punctuation">,</span> smoothness<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实际上可以通过<code>CinemachineVirtualCamera</code>(Framing Transposer)实现一样的功能，并且有更多参数可以调节，可以做得更好</p><h2 id="bugs" tabindex="-1"><a class="header-anchor" href="#bugs"><span>bugs</span></a></h2><h3 id="内存溢出-在urp管线下-两个相机-使用全局volume和后处理" tabindex="-1"><a class="header-anchor" href="#内存溢出-在urp管线下-两个相机-使用全局volume和后处理"><span>内存溢出：在URP管线下，两个相机，使用全局Volume和后处理</span></a></h3><p>一个相机输出到render texture（256*256），一个相机输出到屏幕，1920*1080分辨率</p><p>TODO: 不知道是不是我导入其他后处理效果导致的（关闭导入的后处理效果不影响），进一步实验确认。</p><p>现象：点击play，三秒钟内存使用8G，在等几秒立刻崩溃。</p><p>虽然说改用local Volume可以解决这个问题，但他奶奶的global模式是干什么用的？</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2>`,11),F={href:"https://youtu.be/d_0dAwk3wqI?si=lkzEyYuIJKDawH5Q&t=140",target:"_blank",rel:"noopener noreferrer"},H={href:"https://www.youtube.com/watch?v=asruvbmUyw8",target:"_blank",rel:"noopener noreferrer"},M={href:"https://www.cnblogs.com/koshio0219/p/14263078.html",target:"_blank",rel:"noopener noreferrer"},q={href:"https://blog.csdn.net/aaa27987/article/details/129753424",target:"_blank",rel:"noopener noreferrer"},G={href:"https://discussions.unity.com/t/world-space-canvas-on-top-of-everything/128165/3",target:"_blank",rel:"noopener noreferrer"},L={href:"https://zh.moegirl.org.cn/%E7%A8%80%E9%9F%B3",target:"_blank",rel:"noopener noreferrer"},J={href:"https://catlikecoding.com/unity/tutorials/movement/orbit-camera/",target:"_blank",rel:"noopener noreferrer"};function W(Y,j){const l=i("center"),s=i("ExternalLinkIcon");return r(),p("div",null,[_,a(l,null,{default:t(()=>[b]),_:1}),k,a(l,null,{default:t(()=>[v]),_:1}),f,e("ul",null,[e("li",null,[n("URP中，需要配置"),g,n("相机，主相机和"),y,n("相机对UI layer要做过滤。 "),e("ul",null,[e("li",null,[n("参考："),e("a",C,[n("Unity URP相机使用简介 - CSDN"),a(s)])]),e("li",null,[n("采用上述方法配置，"),U,n("层会和"),w,n("相机同时受到"),x,n("（抗锯齿）影响，这对UI很不友好，有两个方法解决这一问题。 "),e("ul",null,[e("li",null,[n("先看看"),e("a",P,[n("UI受"),R,n("影响会怎么样 - unity forum"),a(s)])]),V,e("li",null,[n("参考: "),e("a",B,[n("cameras-advanced - Unity Doc URP@14.0.9"),a(s)])])])])])]),e("li",null,[n("Built-in Pipeline中，需要配置两个相机，"),T,n("，"),D,n("，同时相机对UI layer要做过滤。 "),e("ul",null,[e("li",null,[n("参考："),e("a",O,[n("World Space canvas on top of “everything” ? - unity discussions"),a(s)])])])])]),I,e("p",null,[S,n("配置可以参考："),e("a",E,[n("How to use Cameras in Unity: Cinemachine Overview and Brain Explained!"),a(s)])]),N,e("p",null,[n("第二组属性的用法，可以参考："),e("a",z,[n("How to use Cameras in Unity: Cinemachine Virtual Cameras Explained"),a(s)]),n("，里面对组件的各个属性有详细介绍。例如配置第二组属性，可以实现多人联机拖拽视角的效果")]),A,e("ul",null,[e("li",null,[n("简易跟随相机代码："),e("a",F,[n("Making A MOBA Character #1: MOVEMENT (Unity 2019 Tutorial) - Youtube"),a(s)])]),e("li",null,[e("a",H,[n("How to use Cameras in Unity: Cinemachine Virtual Cameras Explained - Youtube"),a(s)])]),e("li",null,[e("a",M,[n("Unity HDRP 多摄像机分层渲染 - cnblog"),a(s)])]),e("li",null,[n("URP 相机-overlay和base模式，多相机："),e("a",q,[n("Unity URP相机使用简介 - CSDN"),a(s)])]),e("li",null,[n("Built-in Pipeline 相机层次渲染："),e("a",G,[n("World Space canvas on top of “everything” ? - unity discussions"),a(s)])]),e("li",null,[n("头图："),e("a",L,[n("稀音精二立绘, 明日方舟 - 萌娘百科"),a(s)])]),e("li",null,[n("带躲避的第三人称相机："),e("a",J,[n("Orbit Camera"),a(s)])])])])}const X=c(m,[["render",W],["__file","Camera.html.vue"]]),Z=JSON.parse('{"path":"/UnityComponent/Camera.html","title":"摄像机","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"基本相机属性","slug":"基本相机属性","link":"#基本相机属性","children":[{"level":3,"title":"分层渲染","slug":"分层渲染","link":"#分层渲染","children":[]}]},{"level":2,"title":"自动相机-Cinemachine","slug":"自动相机-cinemachine","link":"#自动相机-cinemachine","children":[{"level":3,"title":"CinemachineBrain","slug":"cinemachinebrain","link":"#cinemachinebrain","children":[]},{"level":3,"title":"CinemachineVirtualCamera","slug":"cinemachinevirtualcamera","link":"#cinemachinevirtualcamera","children":[]}]},{"level":2,"title":"例子","slug":"例子","link":"#例子","children":[{"level":3,"title":"实现moba游戏跟随相机","slug":"实现moba游戏跟随相机","link":"#实现moba游戏跟随相机","children":[]}]},{"level":2,"title":"bugs","slug":"bugs","link":"#bugs","children":[{"level":3,"title":"内存溢出：在URP管线下，两个相机，使用全局Volume和后处理","slug":"内存溢出-在urp管线下-两个相机-使用全局volume和后处理","link":"#内存溢出-在urp管线下-两个相机-使用全局volume和后处理","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1707819000000,"updatedTime":1715524311000,"contributors":[{"name":"Unarimit","email":"1798907875@qq.com","commits":3}]},"readingTime":{"minutes":4.52,"words":1356},"filePathRelative":"UnityComponent/Camera.md","localizedDate":"February 13, 2024"}');export{X as comp,Z as data};
