import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as u,a as e,b as a,d as s,e as l}from"./app-BX3Xhc_b.js";const i="/assets/lua-0-CsYOybgD.png",r={},p=l('<h1 id="lua学习笔记" tabindex="-1"><a class="header-anchor" href="#lua学习笔记"><span>Lua学习笔记</span></a></h1><img src="'+i+'"><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>由于我有一些C#开发经验和其他语言的轻度使用经验（C++、Python等），所以可能会默认读者也知道这些知识。</p><p>当然有可能是混淆一些概念，把东西写的更不清楚:（</p></div><p>Lua是一种解释性语言，意味着和我们学习过的常用编程语言（如C，C++，Java）和Unity开发使用的C#语言有很多不同。</p><blockquote><p>他和同为解释性语言的Python倒是有很多相似的地方（连开发时间都很接近呢）。</p></blockquote><h2 id="我-为什么学习lua" tabindex="-1"><a class="header-anchor" href="#我-为什么学习lua"><span>(我)为什么学习lua？</span></a></h2><p>Lua作为一种胶水语言，在游戏热更新中普遍使用。但看了<a href="../GameBuild/Mod&amp;Hotfix">几种不同的热更新方案</a>，我最不想用的就是lua（喜欢我动态类型吗），不过鉴于它在游戏开发的活跃程度，还是得学。</p><blockquote><p>忘记最近在那本书上看到：“程序员不要介意多学语言”。</p></blockquote><h2 id="我-如何学习lua" tabindex="-1"><a class="header-anchor" href="#我-如何学习lua"><span>(我)如何学习lua？</span></a></h2>',9),d={href:"https://www.lua.org/pil/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/Tencent/xLua",target:"_blank",rel:"noopener noreferrer"},b=l('<blockquote><p>书中有提到线上的文档涵盖Api更全（但没有示例代码），书中介绍的是相对常用的功能。</p></blockquote><h2 id="带着问题去学习" tabindex="-1"><a class="header-anchor" href="#带着问题去学习"><span>带着问题去学习</span></a></h2><blockquote><p>这些问题大部分是在学习过程中产生的</p></blockquote><h4 id="q1-游戏行业为什么普遍使用lua做热更新" tabindex="-1"><a class="header-anchor" href="#q1-游戏行业为什么普遍使用lua做热更新"><span>Q1: 游戏行业为什么普遍使用lua做热更新？</span></a></h4><p>因为lua虚拟机很小，几百KB。再加上设计之初就是用于给其他语言补丁用的。</p><blockquote><p>但在网上经常看到哪个项目只用c#写框架，逻辑都用lua写。这对吗？</p></blockquote><h4 id="q2-在unity中-lua与c-交互的方式有哪些-lua通过什么影响游戏世界" tabindex="-1"><a class="header-anchor" href="#q2-在unity中-lua与c-交互的方式有哪些-lua通过什么影响游戏世界"><span>Q2: 在Unity中，Lua与C#交互的方式有哪些？（Lua通过什么影响游戏世界？）</span></a></h4><p>以XLua为例：</p>',8),_={href:"https://github.com/Tencent/xLua/tree/master/Assets/XLua/Examples/02_U3DScripting",target:"_blank",rel:"noopener noreferrer"},k=e("code",null,"LuaBehaviour",-1),m=e("code",null,"Behaviour",-1),f=e("code",null,"Inspector",-1),v=l(`<ul><li>获取<code>LuaEnv</code>（教程的写法是共用一个<code>LuaEnv</code>，是为了避免lua多次载入CS下命名空间的开销吗？）</li><li>以<code>TextAsset</code>的形式载入脚本文件，使用<code>DoString</code>方法将脚本载入到一个<code>LuaTable</code>中，避免命名冲突</li><li>在<code>LuaTable</code>中使用<code>Set</code>方法设置所需的(依赖的)对象</li><li>在<code>LuaTable</code>中使用<code>Get</code>方法获取脚本中的函数，类型为C#的<code>Action</code></li><li>在生命周期中调用上一步获取的lua函数</li></ul><p>上述例子实现了C#调用Lua(start, update等生命周期函数)，和Lua调用C#(操作注入的对象)</p><h4 id="q3-如何产生lua端的代码提示" tabindex="-1"><a class="header-anchor" href="#q3-如何产生lua端的代码提示"><span>Q3: 如何产生Lua端的代码提示？</span></a></h4><p>需要搭配相关的插件（VS Code上有一些插件，但感觉使用人数不是很多），XLua方案和Lua都没有提供内建支持，可能这并不是什么大问题。</p><h2 id="使用lua做热更新的准备工作" tabindex="-1"><a class="header-anchor" href="#使用lua做热更新的准备工作"><span>使用Lua做热更新的准备工作！</span></a></h2><h3 id="安装lua在本机用于学习" tabindex="-1"><a class="header-anchor" href="#安装lua在本机用于学习"><span>安装lua在本机用于学习</span></a></h3><p>简要介绍一下安装方法</p><p>windows下可以用choco装lua53</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>choco <span class="token function">find</span> lua <span class="token comment"># 能看到 &#39;lua53 5.3.5 [Approved]&#39;</span>
choco <span class="token function">install</span> lua53
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>代码高亮和自动补全可以搜搜vscode的拓展插件</p><h3 id="安装xlua在项目中" tabindex="-1"><a class="header-anchor" href="#安装xlua在项目中"><span>安装XLua在项目中</span></a></h3>`,11),g={href:"https://github.com/Tencent/xLua",target:"_blank",rel:"noopener noreferrer"},L=e("code",null,"Assets目录",-1),x=e("code",null,"Assets目录",-1),q=e("code",null,"dll",-1),w=l(`<blockquote><p>路径不是绝对的，但变更路径可能产生一些影响，例如需要重新配置Generate Path。</p></blockquote><blockquote><p>期间可能出现多个<strong>相同名字和配置</strong><code>lua.dll</code>导致的Unity报错(应该是支持环境没下载全导致的meta文件的配置没识别对，从而出现了相同配置的<code>lua.dll</code>)，我的解决方式是把不需要的删掉，只留<code>x86</code>。</p></blockquote><p>之后运行<code>Hello world</code>测试</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name">XLua<span class="token punctuation">.</span>LuaEnv</span> luaenv <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">XLua<span class="token punctuation">.</span>LuaEnv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
luaenv<span class="token punctuation">.</span><span class="token function">DoString</span><span class="token punctuation">(</span><span class="token string">&quot;CS.UnityEngine.Debug.Log(&#39;hello world&#39;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
luaenv<span class="token punctuation">.</span><span class="token function">Dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若有看到控制台输出，就代表安装完成了！进一步的经验请参考<a href="./UseXLua">使用XLua</a>部分。</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2>`,6),C={href:"https://www.lua.org/pil/",target:"_blank",rel:"noopener noreferrer"},y={href:"https://www.drflower.top/posts/b6dbb21b/",target:"_blank",rel:"noopener noreferrer"},T={href:"https://www.lfzxb.top/the-theory-of-lua-5-0/",target:"_blank",rel:"noopener noreferrer"};function S(X,D){const n=o("ExternalLinkIcon");return c(),u("div",null,[p,e("p",null,[a("学习方式主要是看"),e("a",d,[a("Lua程序设计 第四版 - Roberto"),s(n)]),a("这本书，和使用"),e("a",h,[a("xLua"),s(n)]),a("实践。")]),b,e("p",null,[a("参考"),e("a",_,[a("Demo2"),s(n)]),a("，可以通过设定"),k,a("，按照"),m,a("生命周期调用指定lua文件的相关函数，并定义"),f,a("，通过其中的配置，注入所需的(依赖的)对象。其中的关键操作为：")]),v,e("p",null,[a("进入"),e("a",g,[a("XLua的github仓库"),s(n)]),a("，下载仓库的zip包(Code->Download Zip)，将"),L,a("覆盖到Unity项目的"),x,a("。如有必要，还可以将release下的更新的"),q,a("包覆盖到项目中。")]),w,e("ul",null,[e("li",null,[e("a",C,[a("Lua程序设计 第四版 - Roberto"),s(n)])]),e("li",null,[e("a",y,[a("Lua是一门怎样的语言 - 花桑的博客"),s(n)])]),e("li",null,[a("lua实现研究，还没来及看："),e("a",T,[a("Lua5.0原理探究 - 烟雨迷离半世殇的博客"),s(n)])])])])}const A=t(r,[["render",S],["__file","index.html.vue"]]),B=JSON.parse('{"path":"/Lua/","title":"Lua学习笔记","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"(我)为什么学习lua？","slug":"我-为什么学习lua","link":"#我-为什么学习lua","children":[]},{"level":2,"title":"(我)如何学习lua？","slug":"我-如何学习lua","link":"#我-如何学习lua","children":[]},{"level":2,"title":"带着问题去学习","slug":"带着问题去学习","link":"#带着问题去学习","children":[]},{"level":2,"title":"使用Lua做热更新的准备工作！","slug":"使用lua做热更新的准备工作","link":"#使用lua做热更新的准备工作","children":[{"level":3,"title":"安装lua在本机用于学习","slug":"安装lua在本机用于学习","link":"#安装lua在本机用于学习","children":[]},{"level":3,"title":"安装XLua在项目中","slug":"安装xlua在项目中","link":"#安装xlua在项目中","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1707819000000,"updatedTime":1708177842000,"contributors":[{"name":"Unarimit","email":"1798907875@qq.com","commits":3}]},"readingTime":{"minutes":3.59,"words":1077},"filePathRelative":"Lua/Index.md","localizedDate":"February 13, 2024"}');export{A as comp,B as data};
