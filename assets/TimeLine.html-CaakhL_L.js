import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as i,c as l,a as n,b as s,d as a,w as u,e as t}from"./app-BX3Xhc_b.js";const r="/assets/timeline-1-DBFAdTf1.png",d="/assets/timeline-3-CDgf3caF.gif",k="/assets/timeline-2-Cl59VpCa.png",m={},v=t('<img src="'+r+'"><h1 id="timeline" tabindex="-1"><a class="header-anchor" href="#timeline"><span>Timeline</span></a></h1><blockquote><p>&quot;使用 Unity Timeline 可创建影片内容、游戏序列、音频序列和复杂的粒子效果。&quot;</p></blockquote><div class="hint-container tip"><p class="hint-container-title">注意</p><p>我仅轻度使用，对这个组件不是很了解</p></div>',4),b={href:"https://zhuanlan.zhihu.com/p/29188275",target:"_blank",rel:"noopener noreferrer"},h={href:"https://docs.unity3d.com/Packages/com.unity.timeline@1.5/manual/index.html",target:"_blank",rel:"noopener noreferrer"},f=t('<p>那我讲讲Timeline不适合干什么：</p><ul><li>模拟一段符合物理常识的动画（想想你可以通过关键帧做到吗？） <ul><li>虽然可以通过脚本控制，但就没办法在Timeline和Scene中实时看效果了（如果允许脚本在编辑时执行会怎样呢?<code>[ExecuteAlways]</code></li></ul></li><li>使用关键帧切换VirtualCamera的状态（不知道为什么总会丢失关键帧记录！）</li></ul><p>听说是面向影视开发的，还能支持对自定脚本的关键帧过渡，已经算是很不错了吧。</p><h2 id="例子-使用timeline模拟流星坠落效果" tabindex="-1"><a class="header-anchor" href="#例子-使用timeline模拟流星坠落效果"><span>例子：使用Timeline模拟流星坠落效果</span></a></h2><blockquote><p>流星飞跃的效果可以拿来干什么? 当然是抽卡动画了！</p></blockquote><img src="'+d+'"><p><strong>实现思路</strong>：给“流星”设置关键属性，如角速度、速度等，并在<code>update</code>中按照速度更新位置。然后在Timeline中控制这些属性。（最后通过不断实验或公式计算使“流星”落到期望的地点）</p><p><strong>内容</strong>：也就是说，我们需要一段控制类代码，并配置Timeline关键帧，来操控控制类代码。</p><p><strong>出现但是不包含的部分</strong>：“流星”的追拍是用<code>Cinemachine</code>和其中的<code>Dolly Track</code>做的，自己创建一个<code>Dolly Track</code>看看应该就会了。</p><img src="'+k+'">',10),y=t(`<div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">internal</span> <span class="token keyword">enum</span> <span class="token class-name">GachaEffectStatu</span>
<span class="token punctuation">{</span>
    Playing<span class="token punctuation">,</span>
    Boom<span class="token punctuation">,</span>
    Finish
<span class="token punctuation">}</span>
<span class="token comment">// “流星”效果控制类 ////当然，Gacha的意思是抽卡</span>
<span class="token keyword">internal</span> <span class="token keyword">class</span> <span class="token class-name">GachaEffectController</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">MonoBehaviour</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">GameObject</span> m_Tail<span class="token punctuation">;</span> <span class="token comment">// 发光效果</span>
    <span class="token keyword">public</span> <span class="token class-name">GameObject</span> m_Boom<span class="token punctuation">;</span> <span class="token comment">// 爆炸效果</span>

    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">float</span></span> m_ForwordSpeed <span class="token operator">=</span> <span class="token number">10f</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Vector3</span> m_AngleSpeed <span class="token operator">=</span> Vector3<span class="token punctuation">.</span>zero<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 基本由timeline控制</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token class-name">GachaEffectStatu</span> Statu <span class="token operator">=</span> GachaEffectStatu<span class="token punctuation">.</span>Finish<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Play</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token generic-method"><span class="token function">GetComponent</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>PlayableDirector<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>enabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnEnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Statu <span class="token operator">=</span> GachaEffectStatu<span class="token punctuation">.</span>Playing<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>Statu <span class="token operator">==</span> GachaEffectStatu<span class="token punctuation">.</span>Finish<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>enabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Statu <span class="token operator">==</span> GachaEffectStatu<span class="token punctuation">.</span>Boom<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            transform<span class="token punctuation">.</span>eulerAngles <span class="token operator">=</span> Vector3<span class="token punctuation">.</span>zero<span class="token punctuation">;</span>
            m_Tail<span class="token punctuation">.</span><span class="token function">SetActive</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            m_Boom<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetComponent</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ParticleSystem<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>enabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        transform<span class="token punctuation">.</span>position <span class="token operator">+=</span> transform<span class="token punctuation">.</span>forward <span class="token operator">*</span> m_ForwordSpeed <span class="token operator">*</span> Time<span class="token punctuation">.</span>deltaTime<span class="token punctuation">;</span>
        transform<span class="token punctuation">.</span>eulerAngles <span class="token operator">+=</span> m_AngleSpeed <span class="token operator">*</span> Time<span class="token punctuation">.</span>deltaTime<span class="token punctuation">;</span> <span class="token comment">// 这里应该用Rotate方法的..</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2>`,2),_={href:"https://docs.unity3d.com/Packages/com.unity.timeline@1.5/manual/index.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://zhuanlan.zhihu.com/p/29188275",target:"_blank",rel:"noopener noreferrer"};function T(w,S){const e=p("ExternalLinkIcon"),o=p("center");return i(),l("div",null,[v,n("p",null,[s("鉴于官方文档只有英文，我建议先看一些文章了解以下Timeline可以做什么。例如"),n("a",b,[s("【Unity】TimeLine系列教程——编排剧情！ - 陈虹松的文章 - 知乎"),a(e)]),s("就是一个很好的，告诉你Tineline可以干什么的文章。当然最好可以去看文档("),n("a",h,[s("Unity Timeline - unity manual"),a(e)]),s(")。")]),f,a(o,null,{default:u(()=>[s(" 感觉我的Script像一个Animation ")]),_:1}),y,n("ul",null,[n("li",null,[n("a",_,[s("Unity Timeline - unity manual"),a(e)])]),n("li",null,[n("a",g,[s("【Unity】TimeLine系列教程——编排剧情！ - 陈虹松的文章 - 知乎"),a(e)])])])])}const E=c(m,[["render",T],["__file","TimeLine.html.vue"]]),G=JSON.parse('{"path":"/UnityComponent/TimeLine.html","title":"Timeline","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"例子：使用Timeline模拟流星坠落效果","slug":"例子-使用timeline模拟流星坠落效果","link":"#例子-使用timeline模拟流星坠落效果","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1707819000000,"updatedTime":1707819000000,"contributors":[{"name":"Unarimit","email":"1798907875@qq.com","commits":1}]},"readingTime":{"minutes":2.06,"words":619},"filePathRelative":"UnityComponent/TimeLine.md","localizedDate":"February 13, 2024"}');export{E as comp,G as data};
