import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as s,c as d,d as l,w as t,a as e,b as a,e as r}from"./app-BX3Xhc_b.js";const p="/assets/ugui-1-C24fyW71.png",h={},u=r('<h1 id="ugui-api功能部分" tabindex="-1"><a class="header-anchor" href="#ugui-api功能部分"><span>UGUI(api功能部分)</span></a></h1><p>需要在场景添加eventsystem组件，一般会在创建ui组件时自动添加。使用inputsystem时需要简单设置一下。</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>UGUI的代码是公开的，想要了解组件是如何工作的可以看看。（例如<code>GridLayoutGroup</code>是如何计算每个ui的位置的。</p></div><h2 id="和其他ui系统的区别" tabindex="-1"><a class="header-anchor" href="#和其他ui系统的区别"><span>和其他UI系统的区别</span></a></h2><ul><li>FairyGUI <ul><li>跨平台（Unreal、Unity、Cocos2dx..）</li><li>额外的编辑器（方便团队协作）</li></ul></li><li>UI Toolkit（UIElement） <ul><li>提供UXML等样式编辑</li><li>提供对话树等方便编辑的插件</li><li>可以用来写Unity Editor UI</li></ul></li><li>UGUI <ul><li>Unity主流UI</li></ul></li><li>NGUI &amp; IMUI <ul><li>过时的老东西</li></ul></li></ul><h2 id="canvas" tabindex="-1"><a class="header-anchor" href="#canvas"><span>Canvas</span></a></h2><p>创建Canvas UI时，会有三个<code>Component</code>在Canvas下。</p><ul><li><code>Canvas</code>: 主要决定了如何渲染 <ul><li><code>RenderMode</code>：永远显示在屏幕前、显示在相机前（可以被3d物体遮挡）、显示在世界坐标系下</li></ul></li><li><code>CanvasScaler</code>: 用于适配分辨率不同的设备</li><li><code>GraphicRaycaster</code>: 射线检测相关，关了就触发不了ui事件了</li></ul><h3 id="canvas-group" tabindex="-1"><a class="header-anchor" href="#canvas-group"><span>Canvas Group</span></a></h3><p>可以控制当前Canvas以下所有UI的部分属性，有：</p><ul><li><code>Alpha</code>: 配合DOTween做动画</li><li><code>interactable</code>,<code>Blocks Raycasts</code>,<code>Ignore Parent Groups</code></li></ul><h3 id="canvas-动静分离" tabindex="-1"><a class="header-anchor" href="#canvas-动静分离"><span>Canvas 动静分离</span></a></h3><p>Unity底层有个Canvas管理器， 管理器里存着Canvas数组，每一帧都会遍历这个数组，如果发现哪个Canvas上的节点属性发生变化了，那么就更新其顶点信息。如果没变化就不更新。</p><p>而很多人优化的时候说动静分离其实是说将属性更新频率比较大的一些顶点单独放一个canvas，这样就不会影响属性不怎么变化的节点，减少其计算量。</p><h3 id="其他ui优化思路" tabindex="-1"><a class="header-anchor" href="#其他ui优化思路"><span>其他UI优化思路</span></a></h3><ul><li>独立不常用的ui组件</li><li>ui组件预加载</li></ul><h3 id="使用z轴" tabindex="-1"><a class="header-anchor" href="#使用z轴"><span>使用Z轴</span></a></h3><p>TODO：重新实践修改这部分</p><p>RectTransform的Z轴在Canvas的<code>Overlay</code>模式下没有什么卵用</p><p>但<code>Overlay</code>模式下有时候需要规定某些ui永远显示在上方，除了通过hierarchy中的排序之外：</p><ul><li>为UI组件添加<code>Canvas</code>和<code>GraphicRaycaster</code>（如果这个ui不需要互动事件也可以不勾选），勾选重写顺序选项，通过order字段修改优先级。</li><li>通过多个<code>Canvas</code>实现，或配合额外的<code>Camera</code>实现分层渲染。</li></ul><h2 id="image、rowimge和minimap" tabindex="-1"><a class="header-anchor" href="#image、rowimge和minimap"><span>Image、RowImge和Minimap</span></a></h2><p>Image、RowImge是两个功能相似的组件，都可以满足显示图片的需求。</p><p>Image并不是RowImage的超集，都有各自的适用场景。</p><ul><li>Image附带一些常用遮罩效果，使用<code>Spite</code>封装图片信息。</li><li>RowImage可以控制texture uv的显示范围，使用<code>Texture</code>封装图片信息。</li></ul><p>当遇到图片在游戏中出现锯齿时（通常是因为描边），如果是因为图片分辨率和目标分辨率差距过大导致，可以为图片asset勾选<code>Minimap</code>生成不同大小的图片（运行时和<code>Minimap</code>的插值算法是不同的），可以缓解这个问题。</p><h2 id="自适应布局方式" tabindex="-1"><a class="header-anchor" href="#自适应布局方式"><span>自适应布局方式</span></a></h2><p>WIP</p><h2 id="滚动视图" tabindex="-1"><a class="header-anchor" href="#滚动视图"><span>滚动视图</span></a></h2><p>需要使用的组件有:</p><ul><li><code>ScrollRect</code></li><li><code>ScrollBar</code></li><li><code>Mask</code></li></ul><p>对于以上组件的引用关系新建一个<code>ScrollView</code>看看就懂了（Hierarchy栏右键-&gt;UI-&gt;Scroll View）</p><p>如果还需要配置视图中的自动布局（例如实现一个滚动列表），则还需要以下组件</p><ul><li>xxxLayoutGroup，如<code>GridLayoutGroup</code></li><li><code>ContentSizeFitter</code></li></ul><p>基于滚动视图实现内容自动布局，给<code>ScrollView</code>中的Content Object挂上上述的两个组件即可。</p><ul><li>然后在Content Object的层级下随意添加ui组件，就可以看到效果了</li></ul>',36),m=e("img",{src:p},null,-1),g={href:"https://www.bilibili.com/video/BV1F741147L8",target:"_blank",rel:"noopener noreferrer"},_=r('<h2 id="dotween" tabindex="-1"><a class="header-anchor" href="#dotween"><span>DOTween</span></a></h2><p>Unity著名的缓动插件，在Asset Store免费下载。</p><p>为你能想到的所有类使用装饰者模式，拓展了缓动方法。在UGUI中，一般会使用:</p><ul><li><code>RectTransform::DOSizeDelta(vector2, float)</code>缓动组件大小。 <ul><li>确保该组件在inspector中使用height和width属性控制</li></ul></li><li><code>Image::DOFade(float, float)</code>控制透明度实现渐进效果。 <ul><li><code>DOTween.To(() =&gt; color.alpha, x =&gt; color.alpha=x, float, float);</code>可以实现一样的效果</li></ul></li></ul><p>注：使用DOTween托管的功能(<code>OnComplete</code>,<code>DelayCall</code>)，会在Unity调用DOTween组件的<code>update</code>,<code>fixedupdate</code>等中执行委托，具体在哪里执行，取决于在哪个更新函数中使用DOTween托管。</p><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子"><span>例子</span></a></h2><h3 id="使用image实现cooldown" tabindex="-1"><a class="header-anchor" href="#使用image实现cooldown"><span>使用Image实现cooldown</span></a></h3><p>利用img组件自带的一系列Fill属性即可</p>',8),v={href:"https://www.youtube.com/watch?v=wtrkrsJfz_4",target:"_blank",rel:"noopener noreferrer"},U=e("h2",{id:"参考",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#参考"},[e("span",null,"参考")])],-1),f={href:"https://www.youtube.com/watch?v=wtrkrsJfz_4",target:"_blank",rel:"noopener noreferrer"},I={href:"https://docs.unity3d.com/cn/current/Manual/script-ScrollRect.html",target:"_blank",rel:"noopener noreferrer"},w={href:"https://docs.unity3d.com/cn/current/Manual/UIAutoLayout.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.bilibili.com/video/BV1F741147L8",target:"_blank",rel:"noopener noreferrer"},C={href:"https://dotween.demigiant.com/documentation.php",target:"_blank",rel:"noopener noreferrer"},y={href:"https://zhuanlan.zhihu.com/p/629759121",target:"_blank",rel:"noopener noreferrer"},k={href:"https://zhuanlan.zhihu.com/p/634891882",target:"_blank",rel:"noopener noreferrer"},x={href:"https://blog.51cto.com/u_15296378/3017736",target:"_blank",rel:"noopener noreferrer"};function O(G,T){const n=o("center"),i=o("ExternalLinkIcon");return s(),d("div",null,[u,l(n,null,{default:t(()=>[m]),_:1}),l(n,null,{default:t(()=>[a("使用gridgrouplayout自动布局的滚动视图")]),_:1}),e("p",null,[a("关于自动布局实现中遇到问题可以看看实践视频，如"),e("a",g,[a("Unity UGUI 自适应布局 - Bilibili"),l(i)])]),_,e("p",null,[a("可以参考: "),e("a",v,[a("Making A MOBA Character #3: ABILITY COOLDOWN ICONS - Youtube"),l(i)])]),U,e("ul",null,[e("li",null,[e("a",f,[a("Making A MOBA Character #3: ABILITY COOLDOWN ICONS - Youtube"),l(i)])]),e("li",null,[e("a",I,[a("滚动矩形 (Scroll Rect) - Unity Doc"),l(i)])]),e("li",null,[e("a",w,[a("自动布局 - Unity Doc"),l(i)])]),e("li",null,[e("a",b,[a("Unity UGUI 自适应布局 - Bilibili"),l(i)])]),e("li",null,[e("a",C,[a("DOTween Documentation"),l(i)])]),e("li",null,[e("a",y,[a("泰裤辣 の Unity百宝箱】Canvas组件四件套 - 知乎"),l(i)])]),e("li",null,[e("a",k,[a("Unity Canvas详解 - 知乎"),l(i)])]),e("li",null,[e("a",x,[a("Unity中的Image和Raw Image - 51CTO博客"),l(i)])])])])}const R=c(h,[["render",O],["__file","UGUI.html.vue"]]),M=JSON.parse('{"path":"/UnityComponent/UGUI.html","title":"UGUI(api功能部分)","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"和其他UI系统的区别","slug":"和其他ui系统的区别","link":"#和其他ui系统的区别","children":[]},{"level":2,"title":"Canvas","slug":"canvas","link":"#canvas","children":[{"level":3,"title":"Canvas Group","slug":"canvas-group","link":"#canvas-group","children":[]},{"level":3,"title":"Canvas 动静分离","slug":"canvas-动静分离","link":"#canvas-动静分离","children":[]},{"level":3,"title":"其他UI优化思路","slug":"其他ui优化思路","link":"#其他ui优化思路","children":[]},{"level":3,"title":"使用Z轴","slug":"使用z轴","link":"#使用z轴","children":[]}]},{"level":2,"title":"Image、RowImge和Minimap","slug":"image、rowimge和minimap","link":"#image、rowimge和minimap","children":[]},{"level":2,"title":"自适应布局方式","slug":"自适应布局方式","link":"#自适应布局方式","children":[]},{"level":2,"title":"滚动视图","slug":"滚动视图","link":"#滚动视图","children":[]},{"level":2,"title":"DOTween","slug":"dotween","link":"#dotween","children":[]},{"level":2,"title":"例子","slug":"例子","link":"#例子","children":[{"level":3,"title":"使用Image实现cooldown","slug":"使用image实现cooldown","link":"#使用image实现cooldown","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1707819000000,"updatedTime":1713700197000,"contributors":[{"name":"Unarimit","email":"1798907875@qq.com","commits":4}]},"readingTime":{"minutes":4.02,"words":1205},"filePathRelative":"UnityComponent/UGUI.md","localizedDate":"February 13, 2024"}');export{R as comp,M as data};
