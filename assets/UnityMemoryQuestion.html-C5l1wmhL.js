import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,o as l,c as s,a as e,b as r,d as n,e as o}from"./app-BX3Xhc_b.js";const c="/assets/UnityMemoryQuestion-1-uA7aNI-T.gif",p="/assets/UnityMemoryQuestion-2-CgBDDT2X.png",m="/assets/UnityMemoryQuestion-3-A-6ZZIrG.png",y="/assets/UnityMemoryQuestion-4-ByneqqCj.png",f="/assets/UnityMemoryQuestion-5-DK7IB50E.png",h={},d=o('<h1 id="untiy内存问题两则" tabindex="-1"><a class="header-anchor" href="#untiy内存问题两则"><span>Untiy内存问题两则</span></a></h1><h2 id="一、prefabutility-prefab-instance和prefab-in-memory" tabindex="-1"><a class="header-anchor" href="#一、prefabutility-prefab-instance和prefab-in-memory"><span>一、PrefabUtility，Prefab Instance和Prefab In Memory</span></a></h2><p>PrefabUtility有好多方法，其中 <code>PrefabUtility.ApplyPrefabInstance</code> 和 <code>PrefabUtility.SavePrefabAsset</code> 分别作用于 Prefab Instance 和 Prefab In Memory (这两个方法最常用，这里就简单总结下了)</p><blockquote><p>对这里有误解的和原因可能是因为GPT给的代码是实例化后再保存prefab，最后我先入为主以为得先实例化才能修改Prefab （因为没什么头绪，所以先问GPT要了个Demo）</p></blockquote><h2 id="二、memory-profiler" tabindex="-1"><a class="header-anchor" href="#二、memory-profiler"><span>二、Memory Profiler</span></a></h2>',5),u={href:"https://discussions.unity.com/t/memory-leak-reserved-going-10-gb/945249",target:"_blank",rel:"noopener noreferrer"},b={href:"https://unity.com/blog/engine-platform/everything-you-need-to-know-about-memory-profiler",target:"_blank",rel:"noopener noreferrer"},_=o('<h3 id="_2-1-现象" tabindex="-1"><a class="header-anchor" href="#_2-1-现象"><span>2.1 现象</span></a></h3><p><img src="'+c+'" alt=""></p><p>使用Memory Profiler去对比快照发现<code>Reserverd</code>内存在不断增加（不知道这里为什么又划到Native去了。。）：</p><p><img src="'+p+'" alt=""></p><p>去搜相关内容发现，这种问题其实是Profiler标记错内存了，而且Unity2022.3.8版本就是会比我之前使用的Unity2021多很多托管内存。</p><p>之前用的Unity2021版本的Profiler：</p><p><img src="'+m+'" alt=""></p><h3 id="_2-2-解决" tabindex="-1"><a class="header-anchor" href="#_2-2-解决"><span>2.2 解决？</span></a></h3><p>升级到Memory Profiler 1.1.0 之后：</p><p><img src="'+y+'" alt=""></p><p>Profiler中确实这段内存不会再看起来像“内存不断分配再GC”的样子了，且Memory Profiler中也对这段内存为什么这么大给了一定的解释</p><p><img src="'+f+'" alt=""></p><h2 id="三、总结" tabindex="-1"><a class="header-anchor" href="#三、总结"><span>三、总结</span></a></h2><p>** unity</p>',14),g={href:"https://docs.unity3d.com/Manual/performance-track-garbage-collection.html",target:"_blank",rel:"noopener noreferrer"},P=e("h2",{id:"参考",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#参考"},[e("span",null,"参考")])],-1),k={href:"https://docs.unity3d.com/2022.3/Documentation/ScriptReference/PrefabUtility.html",target:"_blank",rel:"noopener noreferrer"},U={href:"https://unity.com/blog/engine-platform/everything-you-need-to-know-about-memory-profiler",target:"_blank",rel:"noopener noreferrer"},M={href:"https://discussions.unity.com/t/memory-leak-reserved-going-10-gb/945249",target:"_blank",rel:"noopener noreferrer"},v={href:"https://docs.unity3d.com/Manual/performance-track-garbage-collection.html",target:"_blank",rel:"noopener noreferrer"};function x(I,T){const t=a("ExternalLinkIcon");return l(),s("div",null,[d,e("p",null,[r("最近突然注意到profiler中托管内存（Managed Heap）占比很高，而且看起来好像一直超出上限不断做gc，就去排查。最后发现这是unity2022.3.8中使用低版本Profiler时的正常的表现。。"),e("a",u,[r("相关问题中建议使用最新版本的 Memory Profiler"),n(t)])]),e("blockquote",null,[e("p",null,[r("作者的"),e("a",b,[r("blog"),n(t)]),r("中也提到，MemoryProfiler主要用于分析Asset加载所占用的内存（即Unity Objects view），原话是 “The Unity Objects view is where you will likely spend the most time.”")])]),_,e("p",null,[r("如果要追踪托管内存的情况，首先应该考虑实机表现并配套相关的可视化工具，并参考一些"),e("a",g,[r("Unity文档中描述的track 托管堆的方法"),n(t)])]),P,e("ul",null,[e("li",null,[e("a",k,[r("PrefabUtility - Unity Scripting API"),n(t)])]),e("li",null,[e("a",U,[r("Everything you need to know about Memory Profiler 1.0.0 - Unity Blog"),n(t)]),e("ul",null,[e("li",null,[r("相关问题 "),e("a",M,[r("Memory Leak - “Reserved” Going 10+ GB"),n(t)])])])]),e("li",null,[e("a",v,[r("Tracking garbage collection allocations - Unity Manual"),n(t)])])])])}const B=i(h,[["render",x],["__file","UnityMemoryQuestion.html.vue"]]),q=JSON.parse('{"path":"/CodingRamble/UnityMemoryQuestion.html","title":"Untiy内存问题两则","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"一、PrefabUtility，Prefab Instance和Prefab In Memory","slug":"一、prefabutility-prefab-instance和prefab-in-memory","link":"#一、prefabutility-prefab-instance和prefab-in-memory","children":[]},{"level":2,"title":"二、Memory Profiler","slug":"二、memory-profiler","link":"#二、memory-profiler","children":[{"level":3,"title":"2.1 现象","slug":"_2-1-现象","link":"#_2-1-现象","children":[]},{"level":3,"title":"2.2 解决？","slug":"_2-2-解决","link":"#_2-2-解决","children":[]}]},{"level":2,"title":"三、总结","slug":"三、总结","link":"#三、总结","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1733641504000,"updatedTime":1733677523000,"contributors":[{"name":"Unarimit","email":"1798907875@qq.com","commits":2}]},"readingTime":{"minutes":1.79,"words":538},"filePathRelative":"CodingRamble/UnityMemoryQuestion.md","localizedDate":"December 8, 2024"}');export{B as comp,q as data};
