import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,o as s,c as o,a as e,b as r,d as n,e as l}from"./app-BX3Xhc_b.js";const c="/assets/terrain-4-BHyzIDeD.png",d="/assets/terrain-1-DCGnQgak.png",p="/assets/terrain-3-C5PkeAXM.png",h="/assets/terrain-2-BkgPlH75.png",u="/assets/terrain-5-Bou0JZ0T.png",_="/assets/terrain-water-Dart8xUg.gif",m="/assets/terrain-6-Cv6e2ixV.png",g="/assets/terrain-7-DaZAcU6W.png",b={},f=l('<h1 id="记一次场景搭建" tabindex="-1"><a class="header-anchor" href="#记一次场景搭建"><span>记一次场景搭建</span></a></h1><img src="'+c+'"><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>这里没有什么代码成分</p></div><p>主要计划使用各种素材拼一个场景出来(设计参考了NIKKI的家园)，也是比较简单和迅速的选择。但是还是有些东西需要自己建模的（主要是原型），分为地形之间的过渡和主要设施的层次结构（如果只是制作平面场景并使用tile prefab去拼可能避免这些问题，这也是我在战斗场景尝试过的内容）两大内容，我们对这些问题分类讨论：</p><ul><li>地形之间的过渡 <ul><li>可以尝试用Unity自带的Terrain实现，虽然它对于风格渲染并不友好（需要写专门的shader），但用默认的shader也不是不能用。</li></ul></li><li>有层次结构的地形 <ul><li>方法1-Terrain：Terrain地形只有高低差之分，不能悬空（不能实现类似悬崖的结构）</li><li>方法2-简单建模：原型阶段可以不用贴图不是吗 <ul><li>使用可以在unity编辑器内部完成的ProBuilder（对不会建模的人很不友好）</li><li>使用其他建模软件</li></ul></li></ul></li></ul><p>下面介绍关于<code>ProBuilder</code>和<code>Terrain</code>使用</p><blockquote><p>最终使用<code>Blender</code>做的场景的结构，<code>Terrain</code>做了拼接素材之间的过渡。</p></blockquote><h2 id="probuilder" tabindex="-1"><a class="header-anchor" href="#probuilder"><span>ProBuilder</span></a></h2>',8),k={href:"https://blog.csdn.net/linxinfa/article/details/124413351",target:"_blank",rel:"noopener noreferrer"},y=l('<p>下面是我的使用体验</p><div class="hint-container tip"><p class="hint-container-title">环境</p><p>ProBuilder版本 Version 5.0.7 - April 12, 2023，Unity版本2021.3</p><p>*需要通过<code>PackageManager</code>导入该资源</p></div><p>我只能说这个东西应该叫做<code>ShitBuilder</code>，理由如下：</p><ul><li>他的一些功能容错度很低（如果不按照预期使用会产生报错和预期之外的效果）</li><li>缺乏一些必要功能（如删除顶点，尽管他提供合并顶点的方法，但根本想不到他的合成逻辑是什么）</li><li>一旦你使用他的clip方法，灾难就开始了，等着删除重建吧。</li><li>基于上述缺点，<code>ShitBuilder</code>要求你懂一些基本的建模思想（例如建模异形体要留够足够的面数用于拓展，中途拆分面操作不当的话就烂了）</li></ul><p>作为专门的原型工具，他的使用流畅度甚至不如一些建模软件（如Blender）</p><blockquote><p>我感觉建模软件在制作原型时的主要问题是功能太多，而且在世界坐标系下的移动和拖拽逻辑都不一样，存在学习成本(如果只是拖个原型出来应该也还好)。</p></blockquote><p>当然，如果你不需要建一个大的异形物体的模型（如地形）的话，还是可以使用的。具体而言，满足下列条件的任意一个就行：</p><ul><li>能接受“中途发现之前的操作有问题导致报错，需要删了重建”的成本。</li><li>或者你是个懂一点建模的人，不需要在原型设计中频繁的拆<code>顶点</code>和<code>面</code>。</li></ul><h2 id="terrain" tabindex="-1"><a class="header-anchor" href="#terrain"><span>Terrain</span></a></h2><p>用的不是很深，只用来做拼接不同素材时的过渡效果。</p><p>作为一个自带的组件，确实挺易用的。唯一不足的是他对lowpoly风格不是很兼容。</p><h2 id="制作流程" tabindex="-1"><a class="header-anchor" href="#制作流程"><span>制作流程</span></a></h2><h3 id="使用blender建模突起的平台结构" tabindex="-1"><a class="header-anchor" href="#使用blender建模突起的平台结构"><span>使用Blender建模突起的平台结构</span></a></h3><p>使用前：</p><img src="'+d+'"><p>使用后：</p><img src="'+p+'"><h3 id="使用terrain过渡拼接的素材" tabindex="-1"><a class="header-anchor" href="#使用terrain过渡拼接的素材"><span>使用Terrain过渡拼接的素材</span></a></h3><p>使用前：</p><img src="'+h+'"><p>使用后（红框部分为Terrain拼接部分）：</p><img src="'+u+'"><h2 id="下一步-制作-动-效" tabindex="-1"><a class="header-anchor" href="#下一步-制作-动-效"><span>下一步，制作“动”效</span></a></h2><p>为右边的瀑布实现流水效果。这是后边补充的内容：</p><img src="'+_+'">',25),v={href:"https://assetstore.unity.com/packages/vfx/shaders/stylized-water-2-170386",target:"_blank",rel:"noopener noreferrer"},x=e("li",null,[r("在blender里面按照插件设定配置水流表面和UV，在unity中使用"),e("code",null,"PolyBrush(unity registry asset)"),r("按照插件设定着色。")],-1),B=e("p",null,"不得不说要实现水流冲击效果，特效还是很重要的。如果卡通风格其实可以考虑不用特效，但相关资源比较难找。",-1),S=e("h3",{id:"一种卡通水的实现",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#一种卡通水的实现"},[e("span",null,"一种卡通水的实现")])],-1),T={href:"https://www.youtube.com/watch?v=WnnaI_OXeEA",target:"_blank",rel:"noopener noreferrer"},w=e("img",{src:m},null,-1),U=e("p",null,"他也实现了简单的特效。",-1),A=e("img",{src:g},null,-1),C=e("p",null,"可惜没有指南的话实现这套对我来说要花好长时间。",-1),P=e("h2",{id:"参考",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#参考"},[e("span",null,"参考")])],-1),D={href:"https://assetstore.unity.com/packages/3d/props/low-poly-ultimate-pack-54733",target:"_blank",rel:"noopener noreferrer"},q={href:"https://assetstore.unity.com/packages/3d/props/exterior/land-1-225713",target:"_blank",rel:"noopener noreferrer"},z={href:"https://assetstore.unity.com/packages/3d/environments/urban/cute-cartoon-town-206100",target:"_blank",rel:"noopener noreferrer"},I={href:"https://assetstore.unity.com/packages/3d/environments/city-adventure-65307",target:"_blank",rel:"noopener noreferrer"},N={href:"https://assetstore.unity.com/packages/vfx/shaders/stylized-water-2-170386",target:"_blank",rel:"noopener noreferrer"},V={href:"https://www.youtube.com/watch?v=DIE3qfCGXl8",target:"_blank",rel:"noopener noreferrer"},W=e("ul",null,[e("li",null,"尝试了一下，他代码是开源的，但没有特效无法满足我的要求")],-1);function E(G,M){const t=a("ExternalLinkIcon");return s(),o("div",null,[f,e("p",null,[r("我找到一篇对其功能很详细的描述文档："),e("a",k,[r("【游戏开发建模】教你使用Unity ProBuilder制作基础模型，搭建场景原型（ 保姆级教程 | Unity 2021最新版） - CSDN"),n(t)])]),y,e("ul",null,[e("li",null,[r("使用"),e("a",v,[r("Stylized Water 2"),n(t)]),r("插件完成。")]),x]),B,S,e("p",null,[e("a",T,[r("Making My First Open World Game | Devlog #1 - Youtube"),n(t)]),r("视频中，就实现了相当方便，视觉也还可以的卡通水效果（感觉不如....）。视频中显示了可以在Unity中方便的编辑（如下图所示），和使用Shader Graph实现水流渲染。 "),w]),U,A,C,P,e("ul",null,[e("li",null,[r("素材： "),e("ul",null,[e("li",null,[e("a",D,[r("低聚物终极包 - Unity Assets"),n(t)])]),e("li",null,[e("a",q,[r("Land 1 - Unity Assets"),n(t)])]),e("li",null,[e("a",z,[r("Cute Cartoon Town - Unity Assets"),n(t)])]),e("li",null,[e("a",I,[r("City Adventure - Unity Assets"),n(t)])]),e("li",null,[e("a",N,[r("Stylized Water 2"),n(t)])])])]),e("li",null,[e("a",V,[r("Unity | Stylized Waterfall Shader - Youtube"),n(t)]),W])])])}const R=i(b,[["render",E],["__file","ASceneStructure.html.vue"]]),X=JSON.parse('{"path":"/CodingRamble/ASceneStructure.html","title":"记一次场景搭建","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"ProBuilder","slug":"probuilder","link":"#probuilder","children":[]},{"level":2,"title":"Terrain","slug":"terrain","link":"#terrain","children":[]},{"level":2,"title":"制作流程","slug":"制作流程","link":"#制作流程","children":[{"level":3,"title":"使用Blender建模突起的平台结构","slug":"使用blender建模突起的平台结构","link":"#使用blender建模突起的平台结构","children":[]},{"level":3,"title":"使用Terrain过渡拼接的素材","slug":"使用terrain过渡拼接的素材","link":"#使用terrain过渡拼接的素材","children":[]}]},{"level":2,"title":"下一步，制作“动”效","slug":"下一步-制作-动-效","link":"#下一步-制作-动-效","children":[{"level":3,"title":"一种卡通水的实现","slug":"一种卡通水的实现","link":"#一种卡通水的实现","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1707819000000,"updatedTime":1708011239000,"contributors":[{"name":"Unarimit","email":"1798907875@qq.com","commits":2}]},"readingTime":{"minutes":4.12,"words":1237},"filePathRelative":"CodingRamble/ASceneStructure.md","localizedDate":"February 13, 2024"}');export{R as comp,X as data};
